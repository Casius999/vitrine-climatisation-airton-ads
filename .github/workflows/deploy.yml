name: Deploy Vitrine Climatisation Airton ADS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci
    
    - name: Lint Frontend
      run: |
        cd frontend
        npm run lint
    
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
    
    - name: Build Backend
      run: |
        cd backend
        npm run build
    
    - name: Run Tests
      run: |
        cd frontend
        npm test -- --watchAll=false
        cd ../backend
        npm test
    
    - name: Archive Production Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          frontend/build
          backend/dist

  deploy_staging:
    name: Deploy to Staging
    needs: build_and_test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: 'https://staging.airton-installation.fr'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
    
    - name: Setup Docker
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker images
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_REGISTRY }}/airton-frontend:staging
          ${{ secrets.DOCKER_REGISTRY }}/airton-backend:staging
    
    - name: Deploy to Staging
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        script: |
          cd /opt/airton-installation
          docker-compose -f docker-compose.staging.yml pull
          docker-compose -f docker-compose.staging.yml up -d

  deploy_production:
    name: Deploy to Production
    needs: deploy_staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: 'https://airton-installation.fr'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Docker
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Tag and Push Docker images for Production
      run: |
        docker pull ${{ secrets.DOCKER_REGISTRY }}/airton-frontend:staging
        docker pull ${{ secrets.DOCKER_REGISTRY }}/airton-backend:staging
        docker tag ${{ secrets.DOCKER_REGISTRY }}/airton-frontend:staging ${{ secrets.DOCKER_REGISTRY }}/airton-frontend:production
        docker tag ${{ secrets.DOCKER_REGISTRY }}/airton-backend:staging ${{ secrets.DOCKER_REGISTRY }}/airton-backend:production
        docker push ${{ secrets.DOCKER_REGISTRY }}/airton-frontend:production
        docker push ${{ secrets.DOCKER_REGISTRY }}/airton-backend:production
    
    - name: Deploy to Production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /opt/airton-installation
          docker-compose -f docker-compose.production.yml pull
          docker-compose -f docker-compose.production.yml up -d
    
    - name: Send Deployment Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: deployments
        SLACK_COLOR: good
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_TITLE: Production Deployment Completed
        SLACK_MESSAGE: 'Vitrine Climatisation Airton ADS has been successfully deployed to production!'
        SLACK_FOOTER: 'CI/CD Pipeline'

  monitoring_setup:
    name: Setup Monitoring
    needs: deploy_production
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Monitoring Tools
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /opt/airton-installation/monitoring
          docker-compose up -d
