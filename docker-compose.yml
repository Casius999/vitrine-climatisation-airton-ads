version: '3.8'

services:
  # API Gateway
  kong:
    image: kong:latest
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    volumes:
      - ./config/kong.yml:/etc/kong/kong.yml
    restart: always

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - REACT_APP_CONFIGURATOR_API_URL=http://localhost:8000/configurator
      - REACT_APP_REVIEWS_API_URL=http://localhost:8000/reviews
      - REACT_APP_BOOKING_API_URL=http://localhost:8000/booking
      - REACT_APP_PAYMENT_API_URL=http://localhost:8000/payment
      - REACT_APP_NOTIFICATION_API_URL=http://localhost:8000/notification
      - REACT_APP_COMMERCIAL_API_URL=http://localhost:8000/commercial
    restart: always

  # Configurator Service
  configurator-service:
    build: ./backend/configurator-service
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/configurator
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mongo
      - redis
    restart: always

  # Reviews Service
  reviews-service:
    build: ./backend/reviews-service
    ports:
      - "3002:3000"
    environment:
      - PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/reviews
      - ALLOVOISIN_API_KEY=${ALLOVOISIN_API_KEY}
    depends_on:
      - postgres
    restart: always

  # Booking Service
  booking-service:
    build: ./backend/booking-service
    ports:
      - "3003:3000"
    environment:
      - PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/booking
      - GOOGLE_CALENDAR_API_KEY=${GOOGLE_CALENDAR_API_KEY}
      - GOOGLE_CALENDAR_ID=${GOOGLE_CALENDAR_ID}
    depends_on:
      - postgres
    restart: always

  # Payment Service
  payment-service:
    build: ./backend/payment-service
    ports:
      - "3004:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/payment
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - COMMERCIAL_SERVICE_URL=http://commercial-service:3000
      - FRONTEND_URL=http://frontend:80
    depends_on:
      - mongo
    restart: always

  # Notification Service
  notification-service:
    build: ./backend/notification-service
    ports:
      - "3005:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/notification
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - GMAIL_API_KEY=${GMAIL_API_KEY}
      - EMAIL_FROM=${EMAIL_FROM}
    depends_on:
      - mongo
      - rabbitmq
    restart: always

  # Marketing & Acquisition Service
  acquisition-marketing-service:
    build: ./backend/acquisition-marketing-service
    ports:
      - "3006:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/acquisition
      - GOOGLE_ADS_API_KEY=${GOOGLE_ADS_API_KEY}
      - FACEBOOK_ADS_API_KEY=${FACEBOOK_ADS_API_KEY}
    depends_on:
      - mongo
    restart: always

  # NEW: Commercial Service
  commercial-service:
    build: ./backend/commercial-service
    ports:
      - "3007:3000"
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/commercial
      - PAYMENT_SERVICE_URL=http://payment-service:3000
      - CONFIGURATOR_SERVICE_URL=http://configurator-service:3000
      - NOTIFICATION_SERVICE_URL=http://notification-service:3000
      - AIRTON_EMAIL=service-client@airton.shop
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
    depends_on:
      - mongo
    restart: always

  # Databases
  mongo:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    restart: always

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=reviews,booking
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./config/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh
    ports:
      - "5432:5432"
    restart: always

  # Caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always

  # Messaging
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: always

volumes:
  mongo-data:
  postgres-data:
  redis-data:
  rabbitmq-data:
