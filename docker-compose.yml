version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway

  api-gateway:
    image: kong:2.8-alpine
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    environment:
      - KONG_DATABASE=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
    volumes:
      - ./config/kong.yml:/etc/kong/kong.yml

  configurator-service:
    build: ./backend/configurator-service
    ports:
      - "3001:3000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/configurator
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - mongodb
      - redis

  booking-service:
    build: ./backend/booking-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/booking
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - GOOGLE_CALENDAR_CREDENTIALS=dummy-credentials
    depends_on:
      - postgres

  payment-service:
    build: ./backend/payment-service
    ports:
      - "3002:3000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/payment
      - STRIPE_SECRET_KEY=dummy-key
      - STRIPE_WEBHOOK_SECRET=dummy-secret
    depends_on:
      - mongodb

  reviews-service:
    build: ./backend/reviews-service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/reviews
      - ALLOVOISIN_API_KEY=dummy-key
    depends_on:
      - postgres

  notification-service:
    build: ./backend/notification-service
    ports:
      - "5000:5000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - GMAIL_API_CREDENTIALS=dummy-credentials
    depends_on:
      - rabbitmq

  mongodb:
    image: mongo:6.0-focal
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_MULTIPLE_DATABASES=booking,reviews
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh:ro

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
  postgres_data:
  rabbitmq_data:
  redis_data: